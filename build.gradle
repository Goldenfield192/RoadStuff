buildscript {
    repositories {
        maven { url = "https://maven.minecraftforge.net/" }
        mavenCentral()
    }
	dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.69', changing: true
	}
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

apply plugin: 'maven-publish'


version = '1.14.4-forge-0.0.1'
if (!"release".equalsIgnoreCase(System.getProperty("target"))) {
    try {
        version += "-" + 'git rev-parse --verify --short=7 HEAD'.execute().text.trim()
    } catch (Exception ex) {
        version += "-unknown"
    }
}
group = "com.goldenfield192.umcdev"
archivesBaseName = "Template"

sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources"
            ]
        }
    }
}
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'stable', version: '58-1.14.4'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                gfsroad {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                gfsroad {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'gfsroad', '--all', '--output', file('src/generated/resources/')
            mods {
                gfsroad {
                    source sourceSets.main
                }
            }
        }
    }
}


repositories { maven { url = "https://teamopenindustry.cc/maven" }}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.2.26'
    implementation fg.deobf('cam72cam.universalmodcore:UniversalModCore:1.14.4-forge-1.2.1-5c5c250')

    implementation 'com.google.code.gson:gson:2.10.1'
}


jar {
    manifest {
        attributes([
                "Specification-Title": "gfsroad",
                "Specification-Vendor": "gfsroad",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"gfsroad",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "sftp://teamopenindustry.cc:22/var/www/html/maven/"
            credentials {
                username = "mavenci"
                password = System.getenv("MAVENCI_PASS")
            }
        }
    }
}

task ('showBuildInfo') {
    doLast {
        String minecraftString = "1.14.4"
        String minecraftLoader = "forge"
        String umcVersionString = "1.14.4-forge-1.2.1-5c5c250"
        System.out.println("Build for MC 1.14.4 (forge)")
        System.out.println("https://teamopenindustry.cc/maven/cam72cam/universalmodcore/UniversalModCore/${umcVersionString}/UniversalModCore-${umcVersionString}.jar")
    }
}

publish.finalizedBy showBuildInfo
